<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:p="http://www.springframework.org/schema/p"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
        xmlns:util="http://www.springframework.org/schema/util"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:task="http://www.springframework.org/schema/task"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
            http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
            http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd">

	<!-- 默认的注解映射的支持 -->
    <mvc:annotation-driven />
    <context:annotation-config />
    <context:component-scan base-package="net.i77soft.spring.mvc3.controller" />
    <context:component-scan base-package="net.i77soft.spring.mvc3.service" />
    <!--
    <context:component-scan base-package="net.i77soft.spring.mvc3.interceptor" />
    -->

    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />

    <!-- 如果当前请求为“/”时，则转发到“/index.html” -->
    <mvc:view-controller path="/" view-name="forward:/index.html"/>

	<!-- 静态资源映射, 设置static静态文件目录的映射 -->
    <mvc:resources mapping="/scripts/**" location="/assets/scripts/" />
    <mvc:resources mapping="/css/**" location="/assets/css/" />
    <mvc:resources mapping="/images/**" location="/assets/images/" />
    <mvc:resources mapping="/styles/**" location="/assets/styles/" />
    <mvc:default-servlet-handler />

    <!-- 拦截器设置 -->
    <mvc:interceptors>
        <!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
        <bean class="net.i77soft.spring.mvc3.interceptor.DBManagerHandlerInterceptor" />
        <mvc:interceptor>
            <!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
            <mvc:mapping path="/ajax2" />
            <bean class="net.i77soft.spring.mvc3.interceptor.AjaxHandlerInterceptor" />
        </mvc:interceptor>
        <mvc:interceptor>
            <!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的, 可以定义多个特定的拦截器 -->
            <mvc:mapping path="/ajax1/**" />
            <bean class="net.i77soft.spring.mvc3.interceptor.AjaxHandlerInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>

    <!--
    <bean id="dbManagerHandlerInterceptor" class="net.i77soft.spring.mvc3.interceptor.DBManagerHandlerInterceptor" />
    <bean id="ajaxHandlerInterceptor" class="net.i77soft.spring.mvc3.interceptor.AjaxHandlerInterceptor" />

    <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping">
        <property name="interceptors">
            <list>
                <ref bean="dbManagerHandlerInterceptor"/>
                <ref bean="ajaxHandlerInterceptor"/>
            </list>
        </property>
    </bean>
    -->

	<!-- 视图解析器, 设置views视图采取的解析引擎, 以及views的起始路径, 后缀名 -->
    <bean id="viewResolver"
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass">
            <value>org.springframework.web.servlet.view.JstlView</value>
        </property>
        <property name="prefix">
            <value>/WEB-INF/views/</value>
        </property>
        <property name="suffix">
            <value>.jsp</value>
        </property>
    </bean>

    <!-- 设置消息转换器的适配器, 处理json, xml, string等 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <util:list id="beanList">
                <ref bean="jsonHttpMessageConverter" />
                <ref bean="stringHttpMessageConverter" />
                <ref bean="marshallingHttpMessageConverter" />
            </util:list>
        </property>
    </bean>

    <!-- 设置http string的消息转换器 -->
    <bean id="stringHttpMessageConverter"
        class="org.springframework.http.converter.StringHttpMessageConverter" />

    <!-- 设置json的消息转换器 -->
    <bean id="jsonHttpMessageConverter"
        class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />

    <!-- 设置http marshalling的消息转换器 -->
    <bean id="marshallingHttpMessageConverter"
        class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
        <property name="marshaller" ref="castorMarshaller" />
        <property name="unmarshaller" ref="castorMarshaller" />
    </bean>

    <bean id="castorMarshaller" class="org.springframework.oxm.castor.CastorMarshaller" />

    <!-- 设置具体的json的消息转换器class -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
            </list>
        </property>
    </bean>

</beans>
